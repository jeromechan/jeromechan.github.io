<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Jerome Chan</title>
		<link>http://aboutcoder.com</link>
		<atom:link href="http://aboutcoder.com/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>关于PhpStorm+MAMP+xdebug集成失败的处理办法</title>
				<description>&lt;p&gt;首先，阐述一下我的开发环境配置：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MacOS v10.11.6&lt;/li&gt;
  &lt;li&gt;MAMP PRO v3.5&lt;/li&gt;
  &lt;li&gt;PHP v5.3.29&lt;/li&gt;
  &lt;li&gt;Xdebug v2.2.7&lt;/li&gt;
  &lt;li&gt;PhpStorm 2016.1&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;近期对mamp作了次重装升级，之后遇到了xdebug无法正常启用的问题，在phpstorm中反馈的Event Log信息如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Cannot accept external Xdebug connection: Cannot evaluate expression &#39;isset($_SERVER[&#39;PHP_IDE_CONFIG&#39;])&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;看以上描述可以知道，是因为在建立Xdebug connection之时，无法找到变量&lt;code class=&quot;highlighter-rouge&quot;&gt;PHP_IDE_CONFIG&lt;/code&gt;的定义。&lt;br /&gt;
谈到这里，大家来看看php.ini中Xdebug的参数配置先：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[xdebug]
extension=xdebug.so

[xdebug]
MAMP_Xdebug_MAMP
 xdebug.remote_enable=1
 xdebug.remote_host=localhost
 xdebug.remote_port=9000
 xdebug.remote_autostart=1
 ;xdebug.profiler_enable=0
 ;xdebug.profiler_output_dir=&quot;/Applications/MAMP/tmp&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;xdebugphpstorm&quot;&gt;一、核实xdebug与phpstorm已建立关联关系&lt;/h4&gt;

&lt;p&gt;打开phpinfo()信息页面，xdebug扩展部分如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-09-01-integrate-phpstorm-mamp-xdebug/14727184774765.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;也可以正常进行加载。但是问题来了，为什么phpstorm不能使用其进行debug过程呢？&lt;br /&gt;
不难发现，&lt;code class=&quot;highlighter-rouge&quot;&gt;IDE Key&lt;/code&gt;上显示的是&lt;code class=&quot;highlighter-rouge&quot;&gt;no value&lt;/code&gt;，这一方面说明了xdebug并没有正确地与phpstorm建立关联，即phpstorm即时发起xdebug connections，也无法正常连接并使用xdebug扩展。&lt;/p&gt;

&lt;p&gt;修正这个问题比较简单，增加xdebug扩展参数配置即可：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xdebug.idekey=&quot;PHPSTORM&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;xdebugzendextension&quot;&gt;二、确认xdebug使用的是zend_extension引入方式&lt;/h4&gt;

&lt;p&gt;php的扩展库有很多，主要分为两大类：php extension和zend extension。&lt;/p&gt;

&lt;p&gt;有的基于php module开发而成，有的基于zend engine开发而成（xdebug基于的就是zend引擎进行开发的），当然，也有的可以兼容两种引擎（memcache就是一个很好的兼容两种引擎的例子）。而这里要提到一个概念，php内核是基于zend engine的，zend engine从php3开始就在服务php内核的最后一道岗了。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;通常我们称php extension为“modules”，称zend extension为“extensions”。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;以下为大家扩展一下，php extension和zend extension的基本数据结构上的区别：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;php extension(modules)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// php extension structures
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_zend_module_entry&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zend_module_entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_zend_module_dep&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zend_module_dep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_zend_module_entry&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zend_api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zend_debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_zend_ini_entry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ini_entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_zend_module_dep&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_zend_function_entry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module_startup_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INIT_FUNC_ARGS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module_shutdown_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SHUTDOWN_FUNC_ARGS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request_startup_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INIT_FUNC_ARGS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request_shutdown_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SHUTDOWN_FUNC_ARGS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ZEND_MODULE_INFO_FUNC_ARGS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;globals_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#ifdef ZTS
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;ts_rsrc_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;globals_id_ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#else
&lt;/span&gt;	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;globals_ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#endif
&lt;/span&gt;	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;globals_ctor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TSRMLS_DC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;globals_dtor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TSRMLS_DC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post_deactivate_func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;module_started&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;module_number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_zend_module_dep&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;		&lt;span class=&quot;cm&quot;&gt;/* module name */&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;		&lt;span class=&quot;cm&quot;&gt;/* version relationship: NULL (exists), lt|le|eq|ge|gt (to given version) */&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;	&lt;span class=&quot;cm&quot;&gt;/* version */&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;		&lt;span class=&quot;cm&quot;&gt;/* dependency type */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;zend extension(extensions)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// zend extension structures
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message_handler_func_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;op_array_handler_func_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zend_op_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;op_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;statement_handler_func_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zend_op_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;op_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fcall_begin_handler_func_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zend_op_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;op_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fcall_end_handler_func_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zend_op_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;op_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;op_array_ctor_func_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zend_op_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;op_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;op_array_dtor_func_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zend_op_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;op_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_zend_extension&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copyright&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
	&lt;span class=&quot;n&quot;&gt;startup_func_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;shutdown_func_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shutdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;activate_func_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;deactivate_func_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deactivate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
	&lt;span class=&quot;n&quot;&gt;message_handler_func_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
	&lt;span class=&quot;n&quot;&gt;op_array_handler_func_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;op_array_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
	&lt;span class=&quot;n&quot;&gt;statement_handler_func_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;statement_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;fcall_begin_handler_func_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fcall_begin_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;fcall_end_handler_func_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fcall_end_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
	&lt;span class=&quot;n&quot;&gt;op_array_ctor_func_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;op_array_ctor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;op_array_dtor_func_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;op_array_dtor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api_no_check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;api_no&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_id_check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;build_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reserved3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reserved4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reserved5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reserved6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reserved7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reserved8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
	&lt;span class=&quot;n&quot;&gt;DL_HANDLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resource_number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zend_extension&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_zend_extension_version_info&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zend_extension_api_no&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zend_extension_version_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;从加载顺序上分析，zend extension要早于php extension进行注册(register)，然而在激活(activate)阶段，却是php extension要早于zend extension被激活。&lt;br /&gt;
在两者的激活顺序上，有如下区别可以额外了解一下：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;PHP extensions&lt;/strong&gt; in an order that make the dependencies be activated in a specific order. But remember that &lt;strong&gt;Zend extensions&lt;/strong&gt; are never sorted in any way. You must then declare them in the FIFO order in php.ini. The engine wont touch your declaration order.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;zend_extension注册是调用的函数&lt;code class=&quot;highlighter-rouge&quot;&gt;zend_register_extension()&lt;/code&gt;，而php extension注册是调用的函数&lt;code class=&quot;highlighter-rouge&quot;&gt;zend_register_module_ex(zend_module_entry *module)&lt;/code&gt;进行注册。&lt;/p&gt;

&lt;p&gt;以下是两类扩展的生命周期图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-09-01-integrate-phpstorm-mamp-xdebug/14727201625932.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;前面谈及了许多的关于php两类扩展的一些内部实现问题，其实对于这部分仅仅为了让开发者们更加深刻记得一点：“确认xdebug使用的是zend_extension引入方式”。&lt;/p&gt;

&lt;p&gt;这个时候，我们需要继续修改php.ini关于xdebug的引入配置：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;;1.移除默认引入xdebug.so的php extension的方式
[xdebug]
;extension=xdebug.so

;2.更改为zend extension的方式对xdebug.so进行引入
[xdebug]
MAMP_Xdebug_MAMP
 zend_extension=&quot;/Applications/MAMP/bin/php/php5.3.29/lib/php/extensions/no-debug-non-zts-20090626/xdebug.so&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;以上可能你会疑惑，为什么一个写的是绝对路径，而一个写的是相对路径？&lt;br /&gt;
其实原因很简单，php extension约定了在加载之时可以使用相对于php.ini公共配置项目 &lt;code class=&quot;highlighter-rouge&quot;&gt;extension_dir&lt;/code&gt;的路径作为扩展路径；而zend extension则约定了使用全路径进行引入和加载。&lt;/p&gt;

&lt;h4 id=&quot;phpstormphp-web-application&quot;&gt;三、配置PhpStorm项目PHP Web Application&lt;/h4&gt;

&lt;p&gt;这部分不在赘述，正如title中所提到的，配置好PhpStorm项目PHP Web Application，就可以进行debug调试你的php脚本代码了。以下就简单的附上几张图示吧，供各位参考。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;配置：Run/Debug Configuration&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-09-01-integrate-phpstorm-mamp-xdebug/14727221950526.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;配置：Servers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-09-01-integrate-phpstorm-mamp-xdebug/14727223290574.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;操作：Start Listening Xdebug Connections&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-09-01-integrate-phpstorm-mamp-xdebug/14727235899205.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Debug界面一览&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-09-01-integrate-phpstorm-mamp-xdebug/14727237053026.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;备注：若各位看官有疑问或者建议，可以在文章末端的disqus留言，本人看到后会及时回复。感谢读者们阅读本篇文章。&lt;/em&gt;&lt;/p&gt;

</description>
				<pubDate>Thu, 01 Sep 2016 17:00:00 +0800</pubDate>
				<link>http://aboutcoder.com/2016/09/01/integrate-phpstorm-mamp-xdebug/</link>
				<guid isPermaLink="true">http://aboutcoder.com/2016/09/01/integrate-phpstorm-mamp-xdebug/</guid>
			</item>
		
			<item>
				<title>Git使用规范</title>
				<description>&lt;blockquote&gt;
  &lt;p&gt;以下是关于源代码版本控制的一些共通的约定、协议。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;section&quot;&gt;一、管理仓库&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;避免将自己开发环境中的内容添加到版本控制系统中；&lt;/li&gt;
  &lt;li&gt;每当merge完成之后，删除本地以及远程的相应的特性分支；&lt;/li&gt;
  &lt;li&gt;只在特性分支中完成编码工作；&lt;/li&gt;
  &lt;li&gt;经常性的执行Rebase，使得upstream的变更及时合并到本地内容中；&lt;/li&gt;
  &lt;li&gt;发起pull request，使得代码得以他人评审。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-1&quot;&gt;二、在特性分支工作&lt;/h4&gt;

&lt;p&gt;基于master，在本地创建特性分支。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout master
git pull
git checkout -b &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;经常性的执行Rebase，使得upstream的变更及时合并到本地内容中。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git fetch origin
git rebase origin/master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果出现冲突，应在Rebase过程中及时解决。&lt;br /&gt;
当特性分支编码完成、通过测试之后，这个时候，需要将内容提交到index storage，即index暂存区。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add --all
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;当你完成了内容的暂存，即以上的add操作，这个时候你便可以提交它了。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git status
git commit --verbose
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这里有一个Tips，对阅读者友好的commit注释是非常必要的，例如以下，就是一则好的提交注释。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Present-tense summary under 50 characters

* More information about commit (under 72 characters).
* More information about commit (under 72 characters).

http://project.management-system.com/ticket/123
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果你之前创建了多个commit，那么你应该使用交互式的Rebase操作，以更好地进行代码的合并，并且生成更为友好的提交注释。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git rebase -i origin/master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;代码提交完成之后，便是要将你提交的内容share给大家。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git push origin &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这个时候，便是向你的团队小伙伴们提交pull request的时候了，请团队成员们帮忙评审自己所编写的代码。&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;三、评审代码&lt;/h4&gt;

&lt;p&gt;邀请一个团队成员来评审自己的代码，是一个很好的发现缺陷issues的良策，还可以避免沟通上的遗漏和错误的传达。&lt;/p&gt;

&lt;p&gt;通过pull request的评审，可以使得评审的工作不仅限于项目组的讨论会议。&lt;/p&gt;

&lt;p&gt;另外，评审人员也可以自行作出代码变更和修改，只需要将变更内容检出到自己本地的分支。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout &amp;lt;branch-name&amp;gt;
./bin/setup
git diff staging/master..HEAD
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;当评审人员在自己的branch上修改完毕，测试通过，提交commit并且push到远程origin分支中。&lt;br /&gt;
对所有变更满意之后，就可以在pull request中备注注释：&lt;code class=&quot;highlighter-rouge&quot;&gt;Ready to merge&lt;/code&gt;。&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;四、代码合并&lt;/h4&gt;

&lt;p&gt;使用交互式的Rebase进行代码的衍合，在每一项衍合所产生的提交中，必要的时候将注释丰富，例如增加message&lt;code class=&quot;highlighter-rouge&quot;&gt;Fix whitespace&lt;/code&gt;的备注。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git fetch origin
git rebase -i origin/master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;倘若你force push你的commit(s)到master，倘若你所使用的平台是GitHub，那么GitHub将自动地关闭你的pull request，同时标记该pull request为”Merged”状态。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git push --force-with-lease origin &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;说到这里，可能各位看官会疑惑，为什么这里引用了&lt;code class=&quot;highlighter-rouge&quot;&gt;--force-with-lease&lt;/code&gt;这么一个git push的option呢？&lt;/p&gt;

&lt;p&gt;下面介绍下这个参数是什么用途：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--[no-]force-with-lease
--force-with-lease=&amp;lt;refname&amp;gt;
--force-with-lease=&amp;lt;refname&amp;gt;:&amp;lt;expect&amp;gt;
Usually, &quot;git push&quot; refuses to update a remote ref that is not an ancestor of the local ref used to overwrite it.

This option overrides this restriction if the current value of the remote ref is the expected value. &quot;git push&quot; fails otherwise.

Imagine that you have to rebase what you have already published. You will have to bypass the &quot;must fast-forward&quot; rule in order to replace the history you originally published with the rebased history. If somebody else built on top of your original history while you are rebasing, the tip of the branch at the remote may advance with her commit, and blindly pushing with --force will lose her work.

This option allows you to say that you expect the history you are updating is what you rebased and want to replace. If the remote ref still points at the commit you specified, you can be sure that no other people did anything to the ref. It is like taking a &quot;lease&quot; on the ref without explicitly locking it, and the remote ref is updated only if the &quot;lease&quot; is still valid.

--force-with-lease alone, without specifying the details, will protect all remote refs that are going to be updated by requiring their current value to be the same as the remote-tracking branch we have for them.

--force-with-lease=&amp;lt;refname&amp;gt;, without specifying the expected value, will protect the named ref (alone), if it is going to be updated, by requiring its current value to be the same as the remote-tracking branch we have for it.

--force-with-lease=&amp;lt;refname&amp;gt;:&amp;lt;expect&amp;gt; will protect the named ref (alone), if it is going to be updated, by requiring its current value to be the same as the specified value &amp;lt;expect&amp;gt; (which is allowed to be different from the remote-tracking branch we have for the refname, or we do not even have to have such a remote-tracking branch when this form is used).

Note that all forms other than --force-with-lease=&amp;lt;refname&amp;gt;:&amp;lt;expect&amp;gt; that specifies the expected current value of the ref explicitly are still experimental and their semantics may change as we gain experience with this feature.

&quot;--no-force-with-lease&quot; will cancel all the previous --force-with-lease on the command line.

-f
--force
Usually, the command refuses to update a remote ref that is not an ancestor of the local ref used to overwrite it. Also, when --force-with-lease option is used, the command refuses to update a remote ref whose current value does not match what is expected.

This flag disables these checks, and can cause the remote repository to lose commits; use it with care.

Note that --force applies to all the refs that are pushed, hence using it with push.default set to matching or with multiple push destinations configured with remote.*.push may overwrite refs other than the current branch (including local refs that are strictly behind their remote counterpart). To force a push to only one branch, use a + in front of the refspec to push (e.g git push origin +master to force a push to the master branch). See the &amp;lt;refspec&amp;gt;... section above for details.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;以上大致的意思是指，在执行git push之时，增加&lt;code class=&quot;highlighter-rouge&quot;&gt;--force-with-lease&lt;/code&gt;参数，可以避免覆盖其他开发者在你fetch了之后，对目标分支做了其他的更新，然后你简单的&lt;code class=&quot;highlighter-rouge&quot;&gt;git push -f&lt;/code&gt;的操作强制覆盖了他人的commits内容。&lt;br /&gt;
如果想要了解&lt;code class=&quot;highlighter-rouge&quot;&gt;--force-with-lease&lt;/code&gt;参数更多的相关知识，可以查看这里Stack Overflow的例子: &lt;a href=&quot;http://stackoverflow.com/questions/5509543/how-do-i-properly-force-a-git-push&quot;&gt;How do I properly force a Git push?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;想要查看新提交的commit(s)列表，想要查看变更的文件列表，以及合并开发分支代码到master，以下命令可以实现这些目的：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git log origin/master..&amp;lt;branch-name&amp;gt;

git diff --stat origin/master

git checkout master
git merge &amp;lt;branch-name&amp;gt; --ff-only
git push
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;特性分支代码既然都已然成功合并到master上，这个时候我们需要去删除特性分支，无论是本地工程目录，还是远程仓库。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Delete your remote feature branch.
git push origin --delete &amp;lt;branch-name&amp;gt;

# Delete your local feature branch.
git branch --delete &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-4&quot;&gt;五、参考资料&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/thoughtbot/guides/tree/master/protocol/git&quot;&gt;Git Protocol&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/5509543/how-do-i-properly-force-a-git-push&quot;&gt;How do I properly force a Git push?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
				<pubDate>Sat, 27 Aug 2016 17:00:00 +0800</pubDate>
				<link>http://aboutcoder.com/2016/08/27/git-protocol/</link>
				<guid isPermaLink="true">http://aboutcoder.com/2016/08/27/git-protocol/</guid>
			</item>
		
			<item>
				<title>XRebel入门与实践</title>
				<description>&lt;h4 id=&quot;xrebel&quot;&gt;一、XRebel简介&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-08-26-xrebel-tutorial/14721890028699.jpg&quot; alt=&quot;&quot; /&gt;
XRebel是一款轻量级的性能优化器，可以帮助开发者们主动去发现和修复一些通用性的问题。XRebel提供了即时的方式，使得开发者可以针对每一个独立的请求进行分析、定位一些诸如DB查询、session变更细节等。&lt;br /&gt;
XRebel支持当前众多的Java企业开发平台，只需要耗费一点点的时间，便可以非常简洁地集成到开发环境当中去。&lt;/p&gt;

&lt;p&gt;为什么开发者需要使用到XRebel呢？其实原因很简单。
许多开发者们都遇到过很多挣扎的事宜，例如为了寻找系统crash或者发现issues问题，不断地去确认编码逻辑，不断地去核实业务实现细节等等，是否有线程间通信安全问题，是否出现了未捕获异常等等。这些都是非常耗费时间精力的，而这些问题我们可以让其在整个软件开发过程中，暴露地更早。在软件开发周期中，问题暴露地越早，所花费的成本就会越低。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The severity of an issue is higher(obviously) if it is later in the development cycle.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-08-26-xrebel-tutorial/14721925857856.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;XRebel正是为了让开发者们避免继续低效率地挣扎，遭遇节假日技术支持的困扰而诞生的性能优化工具。&lt;br /&gt;
它可以帮助开发者们在开发过程中，实时地检测所编程代码的效率参数和通信细节，XRebel只输出了开发者们所关心的关键监控参数细节，而一些无关的其他参数，它将智能地识别并且隐藏起来。&lt;br /&gt;
开发者们使用XRebel，并不需要频繁地切换系统程序和XRebel分析窗口，因为两者是分离开的。你可以在浏览器中的不同tab上打开对应的页面。这一点很好地提高了开发者的开发效率，方便了开发者在不同窗口内查看指定的数据。&lt;/p&gt;

&lt;p&gt;相对于其他的性能优化器产品，XRebel实现了开发、生产环境在代码监测层面上的零差异。开发环境所监测到的sql、session、exception、code trace log等等，无论是在development环境，或是在product环境，都是一致的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-08-26-xrebel-tutorial/14721931961702.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;而其他的一些产品，诸如JProfiler、APM，所监测到的数据大多基于CPU、Memory、Threads等方面，定位问题需要先找到对应的Thread，然后打开Thread Tree/Stack进行逐一排查，非常繁琐，并不是那么地简易操作。&lt;br /&gt;
恰恰XRebel解决了这个排查的技巧性问题。XRebel可以直接捕获到发生异常的代码行和exception detail，同时还可以查看发生该异常的请求之时，所涉及的sql、cache、queue、session等组件的交互情况，使得开发者更易于快速提高解决问题的效率。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-08-26-xrebel-tutorial/14721926122030.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;xrebel-1&quot;&gt;二、XRebel安装使用教程&lt;/h4&gt;

&lt;p&gt;前面介绍了关于XRebel的一些背景和特点，以下介绍XRebel的安装步骤及其Tips。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;首先要说明的一点，XRebel是一款收费工具，并非开源免费。
该工具值得你去购买，如果这笔款项不会影响你的生活质量。关于破解的方法，这里不做介绍，请自行Google。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;section&quot;&gt;下载与安装&lt;/h5&gt;

&lt;p&gt;1.从官网上下载XRebel压缩包（.zip）&lt;a href=&quot;http://zeroturnaround.com/software/xrebel/download/&quot;&gt;http://zeroturnaround.com/software/xrebel/download/&lt;/a&gt;。&lt;br /&gt;
如果你提前登陆了zeroturnaround.com，那么你所下载的zip包中就非常便捷地包含了你的帐号信息。&lt;/p&gt;

&lt;p&gt;2.解压zip包到指定的目录中，zip包中包含的内容如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-08-26-xrebel-tutorial/14721938888446.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3.将&lt;code class=&quot;highlighter-rouge&quot;&gt;xrebel.jar&lt;/code&gt;添加到应用服务容器的JVM参数中，添加时候确认路径是正确无误的。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-javaagent:[path/to/]xrebel.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;4.启动应用服务容器，XRebel就会自动成功启动。&lt;br /&gt;
启动完成之后，打开浏览器，XRebel toolbar就会显示在你服务页面的左下角。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2016-05-20 16:29:42 XRebel: #####################################################
2016-05-20 16:29:42 XRebel:
2016-05-20 16:29:42 XRebel:  XRebel 3.1.1 (201605131009)
2016-05-20 16:29:42 XRebel:  (c) Copyright ZeroTurnaround AS, Estonia, Tallinn.
2016-05-20 16:29:42 XRebel:
2016-05-20 16:29:42 XRebel:  For questions and support,
2016-05-20 16:29:42 XRebel:  contact xrebel@zeroturnaround.com
2016-05-20 16:29:42 XRebel:
2016-05-20 16:29:42 XRebel: #####################################################
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;license&quot;&gt;License激活&lt;/h5&gt;

&lt;p&gt;使用XRebel必须先激活，毕竟是收费工具。当然，在你购买前，你会拥有15天的评估试用期。&lt;br /&gt;
怎么激活呢？其实很简单，在你安装完XRebel之后，首次打开浏览器，以下窗口便会自动弹跳出来，根据提示进行License注册便是。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-08-26-xrebel-tutorial/14721942799287.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;xrebelserver&quot;&gt;将XRebel集成到你的Server中&lt;/h5&gt;

&lt;p&gt;这里会有两个方面可以实践。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;IDE集成&lt;/li&gt;
  &lt;li&gt;Server容器集成&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以下逐一介绍。首先第一种：IDE集成。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.Eclipse&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Tips: 插件&lt;strong&gt;&lt;a href=&quot;http://manuals.zeroturnaround.com/xrebel/install/eclipse.html#xrebel-eclipse-install&quot;&gt;XRebel for Eclipse&lt;/a&gt;&lt;/strong&gt;已经在Marketplace提供下载。目前该插件仅支持Eclipse 3.6版本及以上。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;（1）打开Eclipse的 Run &amp;gt; Run Configurations…；&lt;br /&gt;
（2）选择Server服务容器，打开Arguments参数设置tab标签；&lt;br /&gt;
（3）将以下参数填写到VM arguments配置项目中；&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-javaagent:[path/to/]xrebel.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016-08-26-xrebel-tutorial/14722183417609.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;（4）点击Apply应用并保存到当前的Run Configuration中。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.Intellij IDEA&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;（1）打开IDEA的Run &amp;gt; Edit Configurations…；&lt;br /&gt;
（2）选择Server服务容器；&lt;br /&gt;
（3）将以下参数填写到VM arguments配置项目中；&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-javaagent:[path/to/]xrebel.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016-08-26-xrebel-tutorial/14722184711430.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;（4）点击Apply应用并保存到当前的Run Configuration中。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.NetBeans&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;（1）打开NetBeans的Tools &amp;gt; Servers；&lt;br /&gt;
（2）选择Server服务容器，打开Platform参数设置tab标签；&lt;br /&gt;
（3）将以下参数填写到VM arguments配置项目中；&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-javaagent:[path/to/]xrebel.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016-08-26-xrebel-tutorial/14722186661015.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;（4）点击Close保存并关闭当前窗口。&lt;/p&gt;

&lt;p&gt;下面我们介绍第二种：Server容器集成。&lt;/p&gt;

&lt;p&gt;由于容器种类繁多，这里仅举例应用最为广泛的Tomcat上的应用，其他的容器配置可参考官方文章&lt;a href=&quot;http://manuals.zeroturnaround.com/xrebel/install/index.html#adding-the-xrebel-parameter-without-an-ide&quot;&gt;Adding-the-xrebel-parameter-without-an-ide&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.Tomcat on Windows Platform&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;（1）找到安装Tomcat的目录（即Tomcat home folder）；&lt;br /&gt;
（2）打开bin文件夹；&lt;br /&gt;
（3）新增一个可执行.bat文件，例如命名为&lt;code class=&quot;highlighter-rouge&quot;&gt;catalina-xrebel.bat&lt;/code&gt;；&lt;br /&gt;
（4）将以下内容增加到第3步所创建好的.bat文件中；&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@echo off
set JAVA_OPTS=-javaagent:[path/to/]xrebel.jar %JAVA_OPTS%
call &quot;%~dp0\catalina.bat&quot; %*
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;（5）执行以上.bat文件，启动Tomcat。&lt;/p&gt;

&lt;p&gt;PS: 需要将Tomcat以服务的方式启动着？可以打开tomcat包装器&lt;code class=&quot;highlighter-rouge&quot;&gt;tomcatXw.exe&lt;/code&gt;，在tomcatXw包装器的设置项目Java &amp;gt; Java Options中，新增如下参数：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-javaagent:[path/to/]xrebel.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;2.Tomcat on Mac OS and Linux&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;（1）找到安装Tomcat的目录（即Tomcat home folder）；&lt;br /&gt;
（2）打开bin文件夹；&lt;br /&gt;
（3）新增一个可执行.sh文件，例如命名为&lt;code class=&quot;highlighter-rouge&quot;&gt;catalina-xrebel.sh&lt;/code&gt;；&lt;br /&gt;
（4）将以下内容增加到第3步所创建好的.sh文件中；&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JAVA_OPTS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-javaagent:[path/to/]xrebel.jar &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$JAVA_OPTS&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;dirname &lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/catalina.sh &lt;span class=&quot;nv&quot;&gt;$@&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;（5）按照如下命令，执行以上.sh启动脚本，启动Tomcat。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./catalina-xrebel.sh run
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;xrebel-2&quot;&gt;三、XRebel应用&lt;/h4&gt;

&lt;p&gt;经过前两部分的折腾，你应该已经可以成功启动XRebel了。下面我们来进一步介绍以下，如何去实际使用XRebel？XRebel到底给我们开发者提供了怎样的便捷特性？下面会逐一展开讲道。&lt;/p&gt;

&lt;p&gt;以下主界面非常明显地呈现出了Toolbar的位置，也是XRebel主要的操作菜单功能区。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-08-26-xrebel-tutorial/14722230804350.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.第一大功能：Access application profiling&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-08-26-xrebel-tutorial/14722233171431.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;PS：为了书写方便，这里暂且称之为AAP功能。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;AAP功能包含的是系统服务所接收到的请求列表，以及每一个请求的时间消耗细节监测数据。该数据的统计维度是定位到Method级别的。&lt;br /&gt;
请跟随以下图示，对AAP功能有一个现状的概览印象，具体事宜可以在真实实践的时候进一步逐一了解。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-08-26-xrebel-tutorial/14722236434252.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/images/2016-08-26-xrebel-tutorial/14722237721529.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img src=&quot;/images/2016-08-26-xrebel-tutorial/14722238537773.jpg&quot; alt=&quot;&quot; /&gt;
查看AAP功能的栈信息之时，留意符号的含义。该符号标识了一个异步的执行请求。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;2.第二大功能：Review IO query&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;PS：为了书写方便，这里暂且称之为RIQ功能。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;RIQ功能可以支持但不仅限于jdbc的监测。例如RabbitMQ、JMS、Redis等框架的执行数据的监控。&lt;br /&gt;
如第3张图示，清晰地监测到了请求中所包含的执行SQL语句，这一点对于开发、测试过程都是及其有帮助的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-08-26-xrebel-tutorial/14722233844623.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-08-26-xrebel-tutorial/14722239944661.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/images/2016-08-26-xrebel-tutorial/14722243069603.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.第三大功能：Find exceptions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;PS：为了书写方便，这里暂且称之为FE功能。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;FE功能简单易懂，即异常日志的捕获。开发者们除了在slf4log、log4j等日志框架下定义好的路径中查看系统日志以外，还可以在系统程序运行时从XRebel中查看到即时的日志详情。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-08-26-xrebel-tutorial/14722234443155.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-08-26-xrebel-tutorial/14722244480081.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;以上介绍完了XRebel最为常用的三大功能点，关于session监控的部分，这里也截图一张说明一下，有需要的开发者可以自行研究，例如应用到CAS等用户登录相关场景之时，相信Session data这项功能是你非常好的监控助手。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Session data的功能需要从XRebel的Settings中打开配置选项，默认是不勾选的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-08-26-xrebel-tutorial/14722252061448.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;此外这里再补充一点，也就是主界面三大功能的右上角&lt;code class=&quot;highlighter-rouge&quot;&gt;Hidden items&lt;/code&gt;选项。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-08-26-xrebel-tutorial/14722246072371.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;将该选项打上勾，便可以查看到操作过程中，开发者们标记了hidden的条目，以及XRebel智能隐藏的其他条目。具体看应用场景的需要。&lt;/p&gt;

&lt;h4 id=&quot;section-1&quot;&gt;四、高级配置选项&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;1.XRebel过滤名单&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;XRebel允许配置一项黑名单列表，将不需要监测的class路径添加进去，即达到忽略的目的。&lt;br /&gt;
黑名单配置文件在这里：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~/.xrebel/traces-blacklist.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;XRebel还允许配置一项黑名单，以过滤&lt;code class=&quot;highlighter-rouge&quot;&gt;static&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;transient&lt;/code&gt;属性的大小，使之不影响所在对象Object的大小计算。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~/.xrebel/session-blacklist.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;2.XRebel启动参数&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.single_app_mode=true|false&lt;/code&gt; (default value: true) – Consider all deployments to be part of a single application. This reports activity from different deployment units to one and the same toolbar.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.injection.log_response=true|false&lt;/code&gt; (default: false) – When true, the content of HTTP servlet responses will be logged to xrebel.log. This is meant to help debug cases when XRebel toolbar is not properly injected into the application’s HTML.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.session.include_transient_fields=true|false&lt;/code&gt; (default value: false) – When true, fields with the transient modifier will be considered when constructing the session graph. By default, all transient fields are ignored and objects reachable only through transient fields are not considered to be part of the session.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.browser.console_log=true|false&lt;/code&gt; (default value: false) – When true, the client side XRebel log will be written into the browser console.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.injection=true|false&lt;/code&gt; (default value: true) – Disables the XRebel toolbar injection into application HTML. Add /xrebel to your application URL to view the toolbar in a separate tab (this opens the alternative UI view).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.traces.filter_resources=true|false&lt;/code&gt; (default value: true) – Prevents displaying resource requests in the Application profiling view.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.include_all_io=true|false&lt;/code&gt; (default value: true) – Enables the display of all detected IO events. Uncategorized IO events are displayed as Unidentified.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.sql.format=true|false&lt;/code&gt; (default value: true) – Enables formatting of SQL queries.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.traces.all=true|false&lt;/code&gt; (default value: false) – Enables tracing for all contexts.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.traces.jms=true|false&lt;/code&gt; (default value: false) – Enables tracing for JMS.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.traces.scheduler=true|false&lt;/code&gt; (default value: false) – Enables tracing for ScheduledExecutorService.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.traces.quartz=true|false&lt;/code&gt; (default value: false) – Enables tracing for Quartz.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.traces.rabbitmq=true|false&lt;/code&gt; (default value: false) – Enables tracing for RabbitMQ.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;3.XRebel特性Module配置参数&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.http.HttpURLConnection=true|false&lt;/code&gt; (default value: true) – Disables collecting IQ queries from java.net.HttpURLConnection usage.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.http.HttpCore=true|false&lt;/code&gt; (default value: true) – Disables collecting IO queries from Apache HttpCore 4.x usage.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.http.HttpClient3=true|false&lt;/code&gt; (default value: true) – Disables collecting IO queries from Apache HttpClient 3.x usage.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.mongodb=true|false&lt;/code&gt; (default value: true) – Disables collecting IO queries from MongoDB driver usage.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.hbase=true|false&lt;/code&gt; (default value: true) – Disables collecting IO queries from HBase driver usage.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.redis=true|false&lt;/code&gt; (default value: true) – Disables collecting IO queries from Redis driver usage.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.cassandra=true|false&lt;/code&gt; (default value: true) – Disables collecting IO queries from Cassandra driver usage.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.orm=true|false&lt;/code&gt; (default value: true) – Disables collecting information about ORM queries, including Hibernate JPA queries.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.equinox=true|false&lt;/code&gt; (default value: true) – Disables support for Equinox class loaders (boot delegation).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.rmi=true|false&lt;/code&gt; (default value: true) – Disables collecting IO queries from RMI (java.rmi) remote object invocations.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.traces=true|false&lt;/code&gt; (default value: true) – Disables collecting all method calls during HTTP requests.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.session=true|false&lt;/code&gt; (default value: true) – Disables taking session snapshots.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.springloaded=true|false&lt;/code&gt; (default value: true) – Disables Spring Loaded agent when detected.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.async=true|false&lt;/code&gt; (default value: true) – Disables collecting IO queries from asynchronously executed threads.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.quartz=true|false&lt;/code&gt; (default value: true) – Disables collecting IO queries within a Quartz job context.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.jms=true|false&lt;/code&gt; (default value: true) – Disables collecting IO queries within JMS MessageListener.onMessage() context.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.scheduler=true|false&lt;/code&gt; (default value: true) – Disables collecting IO queries for ScheduledThreadPoolExecutor tasks.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.rabbitmq=true|false&lt;/code&gt; (default value: true) – Disables collecting IO events within RabbitMQ consumer.handleDelivery() context and outgoing messages.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.remote_events=true|false&lt;/code&gt; (default value: true) – Disables collecting and displaying data from remote XRebel-enabled web services (microservices).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.jdbc=true|false&lt;/code&gt; (default value: true) – Disable collecting IO queries from JDBC usage.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.jdbc.sql=true|false&lt;/code&gt; (default value: true) – Disables collecting IO queries from relational database JDBC usage. Requires -Dxrebel.module.jdbc to be true.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.jdbc.neo4j=true|false&lt;/code&gt; (default value: true) – Disables collecting IO queries from Neo4j JDBC usage. Requires -Dxrebel.module.jdbc to be true.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.jdbc.cassandra=true|false&lt;/code&gt; (default value: true) – Disables collecting IO queries from Cassandra JDBC usage. Requires -Dxrebel.module.jdbc to be true.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-Dxrebel.module.jdbc.phoenix=true|false&lt;/code&gt; (default value: true) – Disables collecting IO queries from Apache Phoenix (HBase) usage. Requires -Dxrebel.module.jdbc to be true.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-2&quot;&gt;五、参考资料&lt;/h4&gt;

&lt;p&gt;本篇文章基于个人在近期实践XRebel过程中，所用到的知识归纳成文。&lt;br /&gt;
XRebel实用性极高，对自己在日常的开发中，方便了发现代码缺陷以及存在的性能隐患，所以作此一文推荐一番。&lt;/p&gt;

&lt;p&gt;具体官方资料可查阅：&lt;a href=&quot;http://manuals.zeroturnaround.com/xrebel/index.html&quot;&gt;http://manuals.zeroturnaround.com/xrebel/index.html&lt;/a&gt;&lt;/p&gt;

</description>
				<pubDate>Fri, 26 Aug 2016 17:00:00 +0800</pubDate>
				<link>http://aboutcoder.com/2016/08/26/xrebel-tutorial/</link>
				<guid isPermaLink="true">http://aboutcoder.com/2016/08/26/xrebel-tutorial/</guid>
			</item>
		
			<item>
				<title>如何快速选择开源软件协议</title>
				<description>&lt;p&gt;&lt;img src=&quot;/images/2016-07-22-easy-chosing-opensource-license/14691964599348.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;一、背景介绍&lt;/h3&gt;
&lt;p&gt;目前开源协议有很多，同一款协议也衍生出了许多变种。开源世界中，我们可以使用合适的开源协议，保证自己作品的版权。 &lt;br /&gt;
我们这里不做过多的介绍，只介绍一些自己常用的三个选择及其理由，以供参考。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;二、详细描述&lt;/h3&gt;

&lt;h4 id=&quot;section-2&quot;&gt;2.1 “我需要一个简单宽松的协议”&lt;/h4&gt;
&lt;p&gt;MIT License是一个简短、宽松、自由的协议。该协议允许人们使用你的代码，但必须要保留你的版权信息。与此同时，并不会给你带来任何责任和风险。&lt;code class=&quot;highlighter-rouge&quot;&gt;jQuery&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;.NET Core&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;Rails&lt;/code&gt;使用的均是MIT License。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The MIT License (MIT)
Copyright (c) &amp;lt;year&amp;gt; &amp;lt;copyright holders&amp;gt;

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-3&quot;&gt;2.2 “我更加关心自己的专利”&lt;/h4&gt;
&lt;p&gt;Apache License 2.0是一项和MIT License相似的协议，但自己希望自己的专利能在开源免费使用的同时，保留自己在开源产品中的专利权益。同样，该协议要求使用者必须保留你的版权信息。&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;Android&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Apache&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;Swift&lt;/code&gt;使用的均是Apache License 2.0协议。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Apache License Version 2.0
Copyright [yyyy] [name of copyright owner]

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-4&quot;&gt;2.3 “我关心代码的分享以及促进”&lt;/h4&gt;
&lt;p&gt;如果你希望别人在分享的自己的作品之后，也必须遵循相同的协议，也必须是开源和免费。那么GPLv3是你更好的选择。该协议当中也明确地包含了贡献人的专利权益方面的款项。原作品的版权条款也必须延续保留。GPL协议存在非常强的“传染性”
&lt;code class=&quot;highlighter-rouge&quot;&gt;Bash&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;GIMP&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;Privacy Badger&lt;/code&gt;使用的均是GPLv3协议。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GNU GENERAL PUBLIC LICENSE Version 3
Copyright (C) {year}  {name of author}

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果你的产品是基于终端的，你还可以加上如下一段，使得使用者知晓如何可以联系到你。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;Copyright&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(C)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;fullname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;This&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;comes&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ABSOLUTELY&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;NO&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;WARRANTY;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;details&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`show&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;w&#39;.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;This&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;free&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;software,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;you&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;are&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;welcome&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;redistribute&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;under&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;certain&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;conditions;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`show&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;c&#39;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;details.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-5&quot;&gt;三、参考资料&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Opensource License：&lt;a href=&quot;http://choosealicense.com/licenses/&quot;&gt;http://choosealicense.com/licenses/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;各种开源协议介绍：&lt;a href=&quot;http://www.open-open.com/solution/view/1319816219625&quot;&gt;http://www.open-open.com/solution/view/1319816219625&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;开源那么重要，开源协议你认识吗？&lt;a href=&quot;http://yeyuan.baijia.baidu.com/article/43303&quot;&gt;http://yeyuan.baijia.baidu.com/article/43303&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
				<pubDate>Fri, 22 Jul 2016 18:00:00 +0800</pubDate>
				<link>http://aboutcoder.com/2016/07/22/easy-chosing-opensource-license/</link>
				<guid isPermaLink="true">http://aboutcoder.com/2016/07/22/easy-chosing-opensource-license/</guid>
			</item>
		
			<item>
				<title>解决fastjson反序列化日期0000-00-00失败的方案</title>
				<description>&lt;h4 id=&quot;section&quot;&gt;一、案例场景复原&lt;/h4&gt;
&lt;p&gt;示例场景里涉及两个class：&lt;code class=&quot;highlighter-rouge&quot;&gt;TestDemo.java&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;DateBeanDemo.java&lt;/code&gt;。&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// DateBeanDemo.java&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DateBeanDemo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;cm&quot;&gt;/**
	 * dateStr field with Date.class
	 */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dateStr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Get dateStr &amp;lt;br&amp;gt;
     *
     * @return Returns the dateStr. &amp;lt;br&amp;gt;
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getDateStr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dateStr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Set dateStr &amp;lt;br&amp;gt;
     *
     * @param dateStr The dateStr to set. &amp;lt;br&amp;gt;
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setDateStr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dateStr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dateStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dateStr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 示例执行例子&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TestDemo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;{\&quot;dateStr\&quot;:\&quot;0000-00-00\&quot;}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DateBeanDemo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TestDemo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;jsonStr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateBeanDemo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;执行以上的main方法之后，并没有获取预期的结果，而是在fastjson的序列化解析中便发生了异常，如下&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Exception in thread &quot;main&quot; com.alibaba.fastjson.JSONException: For input string: &quot;0000-00-00&quot;
	at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:555)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:251)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:227)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:186)
	at excel.TestDemo.main(TestDemo.java:23)
Caused by: java.lang.NumberFormatException: For input string: &quot;0000-00-00&quot;
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)
	at java.lang.Long.parseLong(Long.java:419)
	at java.lang.Long.parseLong(Long.java:468)
	at com.alibaba.fastjson.parser.deserializer.DateDeserializer.cast(DateDeserializer.java:56)
	at com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer.deserialze(AbstractDateDeserializer.java:98)
	at Fastjson_ASM_DateBeanDemo_1.deserialze(Unknown Source)
	at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:551)
	... 4 more
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;通过百度查阅了部分网上撰写的方案，可以使用fastjson中的注解&lt;code class=&quot;highlighter-rouge&quot;&gt;@JSONField(format=&quot;&quot;)&lt;/code&gt;来重新定义&lt;code class=&quot;highlighter-rouge&quot;&gt;DateBeanDemo.dateStr&lt;/code&gt;，如下：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@JSONField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;yyyy-MM-dd&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parseFeatures&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;={&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Feature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AllowISO8601DateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dateStr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然而，并没有解决这个exception的问题。同时还怀疑了注解是否在反序列化之时没有被使用到，经过查阅源码，fastjson已将其反序列化的开关定义了&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;。&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Retention&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RetentionPolicy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;RUNTIME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ElementType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;METHOD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ElementType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;FIELD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ElementType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;PARAMETER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JSONField&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ordinal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;serialize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;deserialize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 默认定义了true，反序列化之时也使用该注解&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SerializerFeature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;serialzeFeatures&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{};&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Feature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parseFeatures&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{};&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-1&quot;&gt;二、原因剖析&lt;/h4&gt;

&lt;p&gt;经查找fastjson中相关代码发现，当代码执行到&lt;code class=&quot;highlighter-rouge&quot;&gt;com.alibaba.fastjson.parser.deserializer.DateDeserializer.class&lt;/code&gt;的执行方法&lt;code class=&quot;highlighter-rouge&quot;&gt;cast()&lt;/code&gt;中之时，所使用的JSONParser中所含带的dateFormat依旧是默认的&lt;code class=&quot;highlighter-rouge&quot;&gt;yyyy-MM-dd HH:mm:ss&lt;/code&gt;，而并非注解@JSONField中所定义的&lt;code class=&quot;highlighter-rouge&quot;&gt;yyyy-MM-dd&lt;/code&gt;。
所以发生了转换字段失败。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-07-22-resolve-the-fastjson-problems-about-date/14691655278897.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;再深究一层，为什么不是@JSONField中所定义的&lt;code class=&quot;highlighter-rouge&quot;&gt;yyyy-MM-dd&lt;/code&gt;作为JSONParser中的dateFormat呢？其实仔细阅读一遍&lt;code class=&quot;highlighter-rouge&quot;&gt;cast()&lt;/code&gt;代码逻辑就会发现，并不是fastjson丢弃了JSONField的扫描，而是在方法中有这么一段：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 检查格式是否符合ISO8601的DateFormat规范&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dateLexer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;scanISO8601DateIfMatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label122&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;当执行到以上代码段之时，由于字符串&lt;code class=&quot;highlighter-rouge&quot;&gt;0000-00-00&lt;/code&gt;并不是ISO8601的DateFormat规范之内，故而代码便会&lt;code class=&quot;highlighter-rouge&quot;&gt;break label122&lt;/code&gt;执行跳出逻辑。紧接着执行的就是&lt;code class=&quot;highlighter-rouge&quot;&gt;DateFormat dateFormat1 = parser.getDateFormat();&lt;/code&gt;，此时，parser依然是global定义的parser，DateFormat并没有使用&lt;code class=&quot;highlighter-rouge&quot;&gt;@JSONField&lt;/code&gt;中所定义的。&lt;/p&gt;

&lt;h4 id=&quot;date&quot;&gt;三、解决方案：新增date反序列化解析器&lt;/h4&gt;

&lt;p&gt;解决方案并非只有一种，在众多解决方案中自己选择了”新增date反序列化解析器”的办法。除此之外还有诸如设置&lt;code class=&quot;highlighter-rouge&quot;&gt;JSON.DEFFAULT_DATE_FORMAT&lt;/code&gt;属性的办法，也同样可以解决这一问题。下面作两种办法的对比和阐述。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;方案1：设置属性&lt;code class=&quot;highlighter-rouge&quot;&gt;JSON.DEFFAULT_DATE_FORMAT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这一方案只涉及修改&lt;code class=&quot;highlighter-rouge&quot;&gt;main()&lt;/code&gt;方法代码即可实现，&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 示例执行例子&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TestDemo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;{\&quot;dateStr\&quot;:\&quot;0000-00-00\&quot;}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DEFFAULT_DATE_FORMAT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;yyyy-MM-dd&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DateBeanDemo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TestDemo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;jsonStr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateBeanDemo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;但是翻阅fastjson中对于&lt;code class=&quot;highlighter-rouge&quot;&gt;JSON.DEFFAULT_DATE_FORMAT&lt;/code&gt;可知，该属性属于静态属性，一旦设置影响全局。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// com.alibaba.fastjson.JSON.class
public abstract class JSON implements JSONStreamAware, JSONAware {
    public static String DEFFAULT_DATE_FORMAT;
    // ...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;方案2：新增date反序列化解析器&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;主要思路是以fastjson原生的&lt;code class=&quot;highlighter-rouge&quot;&gt;DateDeserializer.class&lt;/code&gt;为基础，定制化一个可以解析&lt;code class=&quot;highlighter-rouge&quot;&gt;0000-00-00&lt;/code&gt;的日期反序列化解析器。&lt;br /&gt;
该方式是fastjson函数&lt;code class=&quot;highlighter-rouge&quot;&gt;JSON.parseObject()&lt;/code&gt;的一个应用场景，通过定制化&lt;code class=&quot;highlighter-rouge&quot;&gt;ParserConfig&lt;/code&gt;参数，达到局部改变JSON解析逻辑的目的。&lt;br /&gt;
如下：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jeromechan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fixbug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;fastjson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.alibaba.fastjson.parser.DefaultJSONParser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;com.alibaba.fastjson.parser.deserializer.DateDeserializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.lang.reflect.Type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 * Copyright © 2016 Jerome Chan. All rights reserved.
 * An extended DateDeseializer for parsing &#39;0000-00-00&#39;.
 * 
 * @author chenjinlong
 * @CreateDate 7/20/16 5:55 PM
 */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JCDateDeserializer&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateDeserializer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JCDateDeserializer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JCDateDeserializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;JCDateDeserializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DefaultJSONParser&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clazz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fieldName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strVal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strVal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strVal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0000-00-00&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDateFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;yyyy-MM-dd&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clazz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fieldName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 示例执行例子&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TestDemo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;{\&quot;dateStr\&quot;:\&quot;0000-00-00\&quot;}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;        
        &lt;span class=&quot;n&quot;&gt;ParserConfig&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jcParserConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ParserConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;jcParserConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;putDeserializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JCDateDeserializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DateBeanDemo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TestDemo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;jsonStr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateBeanDemo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jcParserConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DEFAULT_PARSER_FEATURE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;假设觉得这种解析办法可以作为整个项目内的全局特性，感兴趣的话可以将定制好的&lt;code class=&quot;highlighter-rouge&quot;&gt;JCDateDeserializer&lt;/code&gt;利用spring框架注入到项目容器中。这同样是对于方案2很不错的延伸。&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;四、参考资料&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;fastjson在github上的issues：&lt;a href=&quot;https://github.com/alibaba/fastjson/issues/414&quot;&gt;https://github.com/alibaba/fastjson/issues/414&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
				<pubDate>Fri, 22 Jul 2016 17:00:00 +0800</pubDate>
				<link>http://aboutcoder.com/2016/07/22/resolve-the-fastjson-problems-about-date/</link>
				<guid isPermaLink="true">http://aboutcoder.com/2016/07/22/resolve-the-fastjson-problems-about-date/</guid>
			</item>
		
			<item>
				<title>什么是架构</title>
				<description>&lt;p&gt;&lt;img src=&quot;/images/2016-07-06-what-is-architecture/14678247250239.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;先来看看老外们对于架构是如何诠释的。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;What is Architecture?&lt;/strong&gt;&lt;br /&gt;
Architecture is the &lt;strong&gt;art&lt;/strong&gt;,science, and profession of planning, &lt;strong&gt;designing&lt;/strong&gt;, and supervising the construction of new &lt;strong&gt;buildings, landscapes, communities&lt;/strong&gt;, and &lt;strong&gt;furnishings&lt;/strong&gt; in their totality, examining their environment in accordance with the &lt;strong&gt;principles&lt;/strong&gt; of utility, strength, and &lt;strong&gt;aesthetics&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;以上这段话虽然更适合解释建筑架构的含义，但是我们通过对比计算机工程类的架构的理念和要求，以上所提到的要点皆包含在内，不外乎生态不同罢了，其两者核心理念是相同的。&lt;/p&gt;

&lt;p&gt;最近日子在工作中遇到的关于“架构”的探讨上，今天来谈谈自己理解的所谓架构，想以此篇文字来端正一下自己。&lt;/p&gt;

&lt;p&gt;架构这词也是神圣不可侵犯的，如果你把一些b格很low的设计细节的东西当作是架构，那么毫无疑问，你正在掩耳盗铃。 
设计和架构有着鸿沟一般的区别。而跨越这条鸿沟,需要不断学习,不停积攒天赋,同时伴随着需 要量的积累。 设计,首先它是一个架构范畴中的一个很小的子集。处于一个很单元的层次,但它也同时是不可逾 越不可或缺的阶段。&lt;/p&gt;

&lt;p&gt;而设计绝不等于架构。&lt;/p&gt;

&lt;p&gt;架构，不仅考量技术实现，还需要诸如：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;客户关键业务点的理解&lt;/li&gt;
  &lt;li&gt;如何将概念具体化&lt;/li&gt;
  &lt;li&gt;项目目标和周期的估算&lt;/li&gt;
  &lt;li&gt;如何多元化团队沟通协作&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;层次高的还有：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;关乎项目战略目标的敲定&lt;/li&gt;
  &lt;li&gt;如何在企业执行中追求更高roi&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;而技术实现方面也不仅仅是说项目如何搭建如何设计db，如何实现分包分模块，还不可或缺的需要包括：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如何将项目平台化&lt;/li&gt;
  &lt;li&gt;如何作冗余和可用架构而同时避免缠绕和蔓延&lt;/li&gt;
  &lt;li&gt;如何用专业手段作架构沟通和透视&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;对于稳定系统的方面,如何去执行可持续治理也是所谓架构的关键点。&lt;/p&gt;

&lt;p&gt;所以，只是挂在嘴边念叨“架构架构”而从不事先勘探落地,这种“理论架构”毫无用处，能体现项目 生产力、技术价值、团队骄傲的，才是我们所需要的真正架构。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;真正懂架构的人，并不会把架构挂在嘴边&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;真正牛逼的架构师，从来都是拿实力和实例说话&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
				<pubDate>Wed, 06 Jul 2016 17:00:00 +0800</pubDate>
				<link>http://aboutcoder.com/2016/07/06/what-is-architecture/</link>
				<guid isPermaLink="true">http://aboutcoder.com/2016/07/06/what-is-architecture/</guid>
			</item>
		
			<item>
				<title>说说使用middleman的那些事情</title>
				<description>&lt;p&gt;&lt;img src=&quot;/images/2016-07-02-talk-about-middleman/DraggedImage.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;一、什么是静态网站&lt;/h4&gt;

&lt;p&gt;随着互联网发展的脚步，现在的个人博客网站已经不再局限于国内几大门户网站所提供的博客撰写服务。
记得上大学那会儿，为了阅读一些名人诸如国民岳父韩寒、李承鹏、徐静蕾等博主的文章和思想，每天必定会上博客上转上两遍，翻阅近十篇进行阅读。那个时候的博客页面加载速度，在寝室512k的带宽状况下，简直令人没有了脾气。&lt;/p&gt;

&lt;p&gt;那个时候并没有太多纯静态网站的做法，有的是一些根据脚本生成指定的某些html页面，用于解决一些高流量访问的问题，例如门户站点的首页，其中只需要保持少量的动态加载元素，对付高流量高并发并不是困难的。&lt;/p&gt;

&lt;p&gt;而个人博客、企业宣传页面不同于上文的需求场景，其更新频率定期，没有过多的注册用户信息的管理，不涉及复杂的交互实现，只需要满足查看和评论的功能即可。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;评论功能自然是需要实现r+w操作的，但是现在已经存在了很多第三方协助托管评论信息的平台，例如国内的多说，国外的disqus。只需要开发者简单地嵌入少量html+js代码即可完成评论功能的实现。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;故而，纯静态网站应运而生，各类纯静态网站生成工具也出现了较大的发展前景。下面说道的middleman就是一个静态网站的generator工具。&lt;/p&gt;

&lt;h4 id=&quot;jekyllmiddleman&quot;&gt;二、放弃jekyll转投middleman&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-07-02-talk-about-middleman/DraggedImage-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这部分并不是说jekyll技术已经落后，而是从自身角度来看为什么自己会转投middleman。
自己是从2014年开始使用jekyll的，源于阅读了较多的大神yuguo对于前端栈的技术篇章，也就两年的光景，但是自己经历了从2.X版本变迁到3.X版本的过程。
对于为什么自己放弃jekyll转投middleman，下面分2点作出阐述。&lt;/p&gt;

&lt;p&gt;第一点，我们先来说说2.X到3.X版本的更迭细节。
&lt;img src=&quot;/images/2016-07-02-talk-about-middleman/DraggedImage-2.png&quot; alt=&quot;&quot; /&gt;
以上变迁的情况说明，大家都知道，jekyll 2.X里包含了ruby和python两门技术，而以上的更迭看来，一方面减少了非必需包的依赖，留出了定制空间，移除了python的依赖。或许jekyll作者更喜欢ruby only吧。&lt;/p&gt;

&lt;p&gt;这些变更并不是向前兼容的，如果你的jekyll是2.X版本，请留意升级后带来的源代码修改的成本。虽然它不是向前兼容，但是升级过程并不会引入更多的包依赖，而恰恰是因为这点，_config.yml需要作出的变更会较多，例如coderay的highlighter引擎建议要更换为rouge；需要分页插件，则需要增加gems:[jekyll-paginate]作出依赖声明，等等。&lt;/p&gt;

&lt;p&gt;而这里包含了一点自己无法接受的变更，看官方声明：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;!! Don’t set a permalink&lt;/strong&gt; &lt;br /&gt;
Setting a permalink in the front matter of your blog page will cause pagination to break. Just omit the permalink.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;以上意思是说，如果你使用了pagination，那么permalink的使用会阻断pagination的执行。也就是说，如果你有一个分页列表的页面，因为你在该页面中使用了permalink改写路径，那么页面中的paginator.posts将会失效，页面内容也将加载失败。&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- This loops through the paginated posts，if you had used permalink settings, the paginator parsing job will fail. --&amp;gt;&lt;/span&gt;
{% for post in paginator.posts %}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ post.url }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ post.title }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;author&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;date&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ post.date }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    {{ post.content }}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
{% endfor %}
	
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;第二点，就要说到liquid的语法。
我们来假设这么个场景，在一个列表加载的页面中，我们需要在循环内判断到达指定加载条目预设上限之时，循环执行break跳出。
这个场景使用liquid引擎是这么写的：&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;post&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;site.posts&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;plus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;也可以这么写：&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt; // 这句话可有可无，因为increment会将var初始化为0
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;post&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;site.posts&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;increment&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;var&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;  // 这句话会自动执行一个print语句，将var打印出来
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;前者的写法让人觉得做一个简单的运算都需要去背记liquid的各种filters，让人觉得麻烦不已。
后者的写法会凭空多出一个默认的print效果，这个也是UI界面编写之时无法接受的。&lt;/p&gt;

&lt;h4 id=&quot;wordpresslamp&quot;&gt;三、为什么不选用WordPress等LAMP架构的博客框架&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-07-02-talk-about-middleman/DraggedImage-3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;作为一名php开发者，wordpress是必须鼓捣的框架之一，但是为什么最终放弃了选用wp作为个人博客首选呢？
原因其实不复杂，主要有以下五个方面： &lt;br /&gt;
1. 涉及数据库技术，数据的灾备流程过于复杂，维护时间成本高； &lt;br /&gt;
2. wp框架体量重，适合开发较大型的cms内容管理站点，对于个人博客有点大材小用，如同杀鸡用了牛刀； &lt;br /&gt;
3. 扩展插件多是其亮点，同时也是拖慢wp站点的一大坑点，php的通用单线程处理机制决定了其瓶颈，就算升级了鸟哥的php7估计也根治不了多扩展插件wp站点的加载时长的问题； &lt;br /&gt;
4. 需要关注的安全问题较多，可定制化有限，如果不合适的定制会引发无法升级的问题； &lt;br /&gt;
5. 需要一台VPS或者Web Host主机，也就是将多出一份硬件方面的开销，如果要求访问稳定、连接速度可接受的主机，购买价格也会逐级上升。&lt;/p&gt;

&lt;h4 id=&quot;middleman&quot;&gt;四、简明middleman实践之路&lt;/h4&gt;
&lt;p&gt;##### 4.1 由于middleman是ruby语言的作品，先了解以下关于ruby语言的关键概念。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-07-02-talk-about-middleman/DraggedImage-4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;ruby：顾名思义，指的就是ruby语言。&lt;/li&gt;
  &lt;li&gt;rvm：全名ruby version manager，注意它和jvm不是一个含义哦。rvm是管理ruby本身，也包含了ruby插件的管理。&lt;/li&gt;
  &lt;li&gt;rails：指的是ruby著名开发框架，认识ruby的人都认识它。&lt;/li&gt;
  &lt;li&gt;rubygems：ruby程序包管理器，可以将ruby程序打包成gem，作为一个独立安装单元安装到计算机中。&lt;/li&gt;
  &lt;li&gt;gem：指的是封装起来的ruby应用程序，或者代码库。终端中使用的gem命令，是指使用rubygems安装程序应用。&lt;/li&gt;
  &lt;li&gt;gemfile：配置文件，用于定义指定应用所依赖的包，然后可以提供给bundle命令执行，类似于shell命令中的.sh脚本。&lt;/li&gt;
  &lt;li&gt;rake：该程序包是ruby所需要安装的包中最为关键的一个。rake是一个ruby的构建工具，类似于Make、ant、maven、gradle不等。rakefile便是其执行的构建任务配置文件，其中涉及特定的DSL撰写方式，类似于groovy在gradle中的应用一样。&lt;/li&gt;
  &lt;li&gt;rakefile：rake构建任务中所涉及的任务配置文件。&lt;/li&gt;
  &lt;li&gt;bundle：等同于批量执行gem命令，配置好gemfile之后，使用bundle install可以实现包，及其依赖包的自动下载与安装。&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;middleman-1&quot;&gt;4.2 middleman的安装疑问&lt;/h5&gt;

&lt;p&gt;middleman依赖于rubygems、bundle、gemfile、rake等工具或框架。在安装一系列ruby依赖库的过程中，会遇到connection fail，error loading，can’t be found等问题，这些问题的原因是因为&lt;a href=&quot;https://www.rubygems.org&quot;&gt;rubygems.org&lt;/a&gt;在国内访问不稳定的缘故。&lt;/p&gt;

&lt;p&gt;正所谓兵来将挡，水来土掩，方法总是比困难要多得多。&lt;br /&gt;
国内的大淘宝，还有ruby-china官方，都给大家做了一个同步频率为15mins的ruby gems的镜像，我们可以将自己本地的ruby gems、bundle源配置切换到国内。 &lt;br /&gt;
参见这里： &lt;br /&gt;
- ruby-china官方源：http://ruby-china.org &lt;br /&gt;
- 大淘宝的镜像源：http://ruby.taobao.org&lt;/p&gt;

&lt;p&gt;在安装各项依赖之时，建议先配置好gemfile，然后使用命令bundle install自动实现下载和安装，而不是使用middleman server逐项发现缺失库，因为从操作效率上是得不偿失的。&lt;/p&gt;

&lt;h5 id=&quot;slim-vs-liquid&quot;&gt;4.3 slim VS liquid&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-07-02-talk-about-middleman/14674858884718.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;关于liquid的一些用法和自己不感冒之处，前面已经提及了部分，这里不再大施笔墨赘述。
这里说说slim的情况。&lt;/p&gt;

&lt;p&gt;liquid是jekyll默认配置的官方模板引擎，而slim也是middleman首推的前端引擎。
liquid有很多晦涩不易入门的语法结构，而slim相对而言就显得优雅了许多。&lt;/p&gt;

&lt;p&gt;slim所倡导的是，一切页面元素、样式、js均可结构化。使用slim可以大大简化前端页面渲染的逻辑实现结构，没有了liquid般的html+js+liquid+css混合搭配在.html文件里使用的尴尬，映入眼帘的均是层次分明，结构清晰的模板语法。&lt;/p&gt;

&lt;p&gt;下面作一下两者的对比，孰好各位看官心中自有结论。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;html+js+css+liquid混合应用&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- html+js+css+liquid混合应用 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;theme-color&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ page.color }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ &quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assets&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;prepend:site&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;baseurl&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;}}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;canonical&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ page.url | replace:&#39;index.html&#39;,&#39;&#39; | prepend:site.baseurl | prepend: 	site.url }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;alternate&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;application/rss+xml&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ site.title }}&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ &quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;feed&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;prepend:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;baseurl&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;prepend:&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;}}&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;slim的前端结构&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-slim highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slim&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;混合应用&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;doctype&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;html
&lt;span class=&quot;nt&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ja&quot;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;head&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;The&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;Elevatorpitch
    &lt;span class=&quot;nt&quot;&gt;meta&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;css:
&lt;/span&gt;      &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;padding-top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;padding-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;40px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container-narrow&quot;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;masthead visible-desktop&quot;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/js/theelevatorpitch.js&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;更多slim应用可以关注我的gist：&lt;a href=&quot;https://gist.github.com/jeromechan/0432a89f3e9810e9ba26052606e56f38&quot;&gt;Use slim engine for building html tags&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;try-the-way-you-like&quot;&gt;五、Try the way you like&lt;/h4&gt;

&lt;p&gt;前端技术的不断发展，纯静态网站的性能问题也逐步被放大，在我们使用静态网站生成工具的同时，性能问题也一定需要着重考虑。
例如，gzip压缩、js+css压缩、单次加载批量样式文件和js文件、html页面布局层次简化、js依赖关系处理、css继承关系的整理、前端cache/data等缓冲区域技术的应用、异步ajax请求时长的监控、sass/less的样式结构简化和预处理，等等方面。&lt;/p&gt;

&lt;p&gt;只要始终坚持用户至上，读者至上的原则，一定能够找到最适合自己预想的方案。&lt;/p&gt;

&lt;p&gt;前面所涉及的参考资料有如下，感兴趣可以自己翻翻看看： &lt;br /&gt;
- &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid官方文档&lt;/a&gt; &lt;br /&gt;
- &lt;a href=&quot;http://jekyllrb.com/docs/pagination/&quot;&gt;Jekyll关于pagination说明&lt;/a&gt; &lt;br /&gt;
- &lt;a href=&quot;https://middlemanapp.com/basics/install/&quot;&gt;Middleman官方文档&lt;/a&gt; &lt;br /&gt;
- &lt;a href=&quot;https://www.reddit.com/r/Jekyll/comments/3uhk2j/cant_get_pagination_working_with_jekyll_301/&quot;&gt;Jekyll中paginate与permalink的冲突&lt;/a&gt; &lt;br /&gt;
- &lt;a href=&quot;http://blog.virtuacreative.com.br/upgrade-jekyll-2-to-3-gh-pages.html&quot;&gt;Upgrading Jekyll 2 to 3 on GitHub Pages&lt;/a&gt; &lt;br /&gt;
- &lt;a href=&quot;https://gist.github.com/jeromechan/0432a89f3e9810e9ba26052606e56f38&quot;&gt;How to use slim engine for building html tags？&lt;/a&gt;&lt;/p&gt;

</description>
				<pubDate>Sat, 02 Jul 2016 17:00:00 +0800</pubDate>
				<link>http://aboutcoder.com/2016/07/02/talk-about-middleman/</link>
				<guid isPermaLink="true">http://aboutcoder.com/2016/07/02/talk-about-middleman/</guid>
			</item>
		
			<item>
				<title>学习笔记：项目管理之规划项目</title>
				<description>&lt;h3 id=&quot;section&quot;&gt;一、回顾基础知识&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;项目经理：把控“完成”的含义，并带领团队完成项目的人；&lt;/li&gt;
  &lt;li&gt;项目的关键驱动因素、约束和浮动因素；&lt;/li&gt;
  &lt;li&gt;传统铁三角：成本 + 时间 + 质量/范围；&lt;/li&gt;
  &lt;li&gt;通过沟通发掘决定项目的关键驱动因素；&lt;/li&gt;
  &lt;li&gt;少用“为什么”，避免“怎么做”，项目如何才算成功；&lt;/li&gt;
  &lt;li&gt;探讨制定项目章程，有助于凝聚团队；&lt;/li&gt;
  &lt;li&gt;从“摩尔鸿沟”表象，看项目、团队发展历程。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-1&quot;&gt;二、引导语&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;“项目规划是在不断进行的，这只是开始。”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;section-2&quot;&gt;三、纲要&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;如何踏上项目征程&lt;/li&gt;
  &lt;li&gt;讲解开发项目规划模版条目&lt;/li&gt;
  &lt;li&gt;项目如何才适合发布上线&lt;/li&gt;
  &lt;li&gt;发布条件的管理&lt;/li&gt;
  &lt;li&gt;最后的几句总结&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-3&quot;&gt;四、辨析两句短语&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2016-06-30-how-to-make-a-project-plan/14673084562094.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;五、使项目踏上征程&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;规划不必完美无缺，实际上这也是做不到的；&lt;/li&gt;
  &lt;li&gt;采用时间盒子的方式启动项目的规划；&lt;/li&gt;
  &lt;li&gt;要根据经验而不是预言来规划项目。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;“规划毫无用处，但是制定规划必不可少。”
——艾森 · 豪威尔
&lt;img src=&quot;/images/2016-06-30-how-to-make-a-project-plan/14673086699212.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;section-5&quot;&gt;六、开发项目规划模版&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;下面介绍一些常用的模版条目 …&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;产品意图&lt;/li&gt;
  &lt;li&gt;发布历史记录&lt;/li&gt;
  &lt;li&gt;发布条件&lt;/li&gt;
  &lt;li&gt;项目目标、时间盒子目标&lt;/li&gt;
  &lt;li&gt;团队职责、项目运作的组织&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;项目日程总览&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;样式1&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/images/2016-06-30-how-to-make-a-project-plan/14673089688628.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;样式2&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/images/2016-06-30-how-to-make-a-project-plan/14673090092803.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;样式3&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/images/2016-06-30-how-to-make-a-project-plan/14673090209493.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;人员配备&lt;/li&gt;
  &lt;li&gt;建议日程
    &lt;ul&gt;
      &lt;li&gt;样式1&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/images/2016-06-30-how-to-make-a-project-plan/14673090942241.jpg&quot; alt=&quot;&quot; /&gt;
 - 样式2&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/images/2016-06-30-how-to-make-a-project-plan/14673091056258.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;温馨提示：小心过早细化日程
&lt;img src=&quot;/images/2016-06-30-how-to-make-a-project-plan/14673091416870.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;9.制定项目风险列表 
&lt;img src=&quot;/images/2016-06-30-how-to-make-a-project-plan/14673092036240.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-6&quot;&gt;七、制定发布条件&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;发布条件可以告诉我们项目“完成”的含义。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;section-7&quot;&gt;八、拟定步骤&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;确定当前发布的最重要的因素（包含关键驱动因素）&lt;/li&gt;
  &lt;li&gt;草拟发布条件&lt;/li&gt;
  &lt;li&gt;修订发布条件，使其符合SMART原则&lt;/li&gt;
  &lt;li&gt;达成多方共识&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;smart&quot;&gt;九、SMART原则&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016-06-30-how-to-make-a-project-plan/14673093012558.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-8&quot;&gt;十、使用发布条件&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016-06-30-how-to-make-a-project-plan/14673093575826.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-9&quot;&gt;十一、关键知识点&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;项目规划实在不断进行的，这只是开始；&lt;/li&gt;
  &lt;li&gt;为项目团队、出资人和项目经理自己制定发布条件，以明确定义“完成”的含义；&lt;/li&gt;
  &lt;li&gt;项目规划不必完美无瑕，但是它必须存在。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-10&quot;&gt;十二、结束语&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016-06-30-how-to-make-a-project-plan/14673094267010.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

</description>
				<pubDate>Thu, 30 Jun 2016 08:00:00 +0800</pubDate>
				<link>http://aboutcoder.com/2016/07/01/how-to-make-a-project-plan/</link>
				<guid isPermaLink="true">http://aboutcoder.com/2016/07/01/how-to-make-a-project-plan/</guid>
			</item>
		
			<item>
				<title>Git软件开发过程</title>
				<description>&lt;h4 id=&quot;gitsubversion&quot;&gt;一、关于Git与Subversion的区别&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;/images/2015-11-16-work-in-git/DraggedImage1.png&quot;&gt;&lt;img src=&quot;/images/2015-11-16-work-in-git/DraggedImage1-1024x1013.png&quot; alt=&quot;DraggedImage&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;subversion&quot;&gt;二、目前我们用Subversion是怎么执行软件过程的&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;/images/2015-11-16-work-in-git/DraggedImage-1.png&quot;&gt;&lt;img src=&quot;/images/2015-11-16-work-in-git/DraggedImage-1-1024x437.png&quot; alt=&quot;DraggedImage-1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;三、优势与缺点&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;架构&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* Git：分布式，所有的teammates本地可以clone一份独立完整的仓库，而不仅仅是某一个版本的镜像拷贝；开发者可以在本地clone仓库中完成所有vcs的操作，只有当需要协同工作提交代码到远程仓库的时候，才需要联上网络。


* Subversion：中央集中式，所有的teammates都面向同样一个远程仓库工作；checkout出来的本地工作区代码只是远程仓库某一版本的一份镜像拷贝。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;仓库结构与URL&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* Git：对于Git而言，仓库会独立于开发者的本地磁盘中，在仓库的根目录中只包含了一个”.git”文件夹，所有的branches、trunk(PS：git中名称为master)、tags均是通过命令操作而生成的，并非通过URL路径。 在Git中，URL类似于ssh://git@example.com/path/to/git-repo.git，仅仅是指向了仓库的一个标识。


* Subversion：分支的url类似于svn+ssh://svn@example.com/svn/trunk，每一个分支独占一个唯一URL，每一个URL都会直接定位到每一个分支在远程仓库中的路径位置。 对于Subversion，会有一个trunk分支作为开发主线分支，会有很多branches分支作为并行分支，tags则是mark上某一特定的发布版本。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;分支管理&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* Git：Git分支相对于其他的vcs是非常不一样的设计理念，一个Git分支仅仅指的是指向某一确定版本的简单指针，因此，Git的分支是无拷贝、无新建目录、几乎无开销的。


* Subversion：正如我们所知道的，SVN中的分支仅仅是项目的一份拷贝，是一个具有特殊含义的普通文件夹；多分支则是多文件夹的形式。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;提交操作&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* Git：若你使用的是Git，你的提交操作不受网络的影响，你的提交仅仅影响了本地仓库，仅当你需要于远端仓库同步内容之时，才需要使用到网络； 另外的，在你本地仓库还存在一个so-called Staging Area，并非你的所有文件需要在一次提交中全部commit，你可以选择指定的变更放入staging area中，从而在本次提交中仅仅包含你所选定的变更条目； 关于Git的版本号，大家都知道，Git是分布式的vcs，要想和svn、cvs一般生成revision#5，revision#6类似的递增数值作为唯一版本号是不可取的，但是我们也同样需要一个唯一的标识来辨别每一次提交，而Git的做法是使用了”commit hashes”。


* Subversion：当你使用的是SVN，假设你要提交代码，以下是你的提交过程：


  * 首先设备必须是联网的，可以与远端中央仓库建立连接；


  * 将提交的内容立即传输到远端中央仓库；


  * 远端中央仓库生成递增的版本号，并赋予本地分支。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;协同工作&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* Git：若你使用的是Git，你需要决定何时将你的本地仓库的内容同步上传到远端仓库分享出来，而Git不会为你作任何的自动上传的操作； 这样子的分享过程相对于其他的中央仓库式的vcs系统来说是更加安全的，所发生的冲突也只会发生于你的本地（仓库）而非远端服务器的仓库，这将更能帮助你规避打乱teammates工作内容冲突的风险。


* Subversion：当你将本地分支内容作commit操作之时，你的内容便会分享到远端中央仓库中，其他teammates也都能同步到你所提交的内容。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;!-- more --&gt;

&lt;h4 id=&quot;section-1&quot;&gt;四、集成工具简介&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;SourceTree：开源的Git源代码管理工具&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TortoiseGit：开源的Git源代码管理工具&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;EGit：Eclipse插件，最新Mars版本已经自带&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Gitflow Nightly：Eclipse插件，支持Git-Flow&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;git&quot;&gt;五、常用Git基础知识&lt;/h4&gt;

&lt;blockquote&gt;认识Git的几个关键目录&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;/images/2015-11-16-work-in-git/DraggedImage-2.png&quot;&gt;&lt;img src=&quot;/images/2015-11-16-work-in-git/DraggedImage-2.png&quot; alt=&quot;DraggedImage-2&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Working directory：工作区&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Index directory：暂存区&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Local repository：本地仓库&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Remote repository：远端仓库&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;常用的Git操作&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;/images/2015-11-16-work-in-git/134623_LGJb_1469576.png&quot;&gt;&lt;img src=&quot;/images/2015-11-16-work-in-git/134623_LGJb_1469576.png&quot; alt=&quot;134623_LGJb_1469576&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;clone：克隆项目到本地工作区，类似svn checkout&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;checkout：创建/切换本地仓库的指定分支到工作区中&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;commit：将本地工作区代码提交到本地仓库&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;push：将本地仓库代码同步到远端仓库&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;pull / fetch：将远端仓库的代码同步到本地仓库/工作区&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* pull：fetch + merge，该操作会影响工作区


* fetch：从远端仓库获取并更新到本地仓库中，不影响工作区
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;merge / rebase：从指定分支(&lt;em&gt;PS:分支名称常跟在命令之后&lt;/em&gt;)中获取更新并合并到当前分支&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* merge：


* rebase：
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;stash：备份/唤出当前的现场状态（包含工作区和暂存区）&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* git stash [save -a “msg”] 备份当前的现场状态


* git stash list 显示已保存的现场状态列表


* git stash pop/apply [--index][&amp;lt;stash&amp;gt;] 恢复工作状态，若不含带参数，则从状态栈中获取最新的。pop在获取完成后，从栈中移除该状态，apply则不会从栈中移除


* git stash clear 清空状态栈中的所有内容


* git drop 删除状态栈中的指定状态
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-2&quot;&gt;六、可供参考的高阶应用方案&lt;/h4&gt;

&lt;blockquote&gt;什么是Git-SVN的扩展开发模式，即本地开发应用Git的强大分支特性，当最终push操作的时候，目标仓库设定为SVN远端仓库。
这里点到为止，只提及一下，以便有既想使用Git又纠结无法脱离Subversion的开发者去使用，这确实是一种很赞的“曲线救国”方案。

什么是Git Stash的开发模式，即一个工程师可以并行开发多项内容，要求用到切换分支的操作，而在没有提交到本地仓库之前，可以使用git stash命令将当前分支的工作区和暂存区的状态镜像下来。当回过头来需要继续开发的时候，使用git stash pop将指定的状态唤出后，可以继续未完成的内容。&lt;/blockquote&gt;

&lt;h4 id=&quot;git-flow&quot;&gt;七、Git-Flow介绍&lt;/h4&gt;

&lt;blockquote&gt;一图胜过千言万语&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;/images/2015-11-16-work-in-git/DraggedImage-3.png&quot;&gt;&lt;img src=&quot;/images/2015-11-16-work-in-git/DraggedImage-3.png&quot; alt=&quot;DraggedImage-3&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;关键几个分支的概念全解&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;主分支&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;branch：保存当前开发成果的分支&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;master：保存当前可供生产部署的代码，在每次发布之时推荐为每次新增发布的代码都打上一个TAG，供后续代码维护使用&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;辅助分支&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Feature：开发完整功能、新特性，从develop分支发起的分支&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Release：用于发布新的产品版本而设计的，支持从develop分支派生&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Hotfix：属于计划外创建的可供生产部署的代码分支，普遍场景是软件遇到了异常情况或发生了严重必须要立即修复的缺陷之时。支持从master分支（或者其中的某一个TAG版本）中派生出来&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;分支命名惯例&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Feature分支：feature-*&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Release分支：release-*&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Hotfix分支：hotfix-*&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;github-flow&quot;&gt;八、GitHub Flow&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;/images/2015-11-16-work-in-git/DraggedImage-4.png&quot;&gt;&lt;img src=&quot;/images/2015-11-16-work-in-git/DraggedImage-4.png&quot; alt=&quot;DraggedImage-4&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;mike-flow-base-on-git-in-practice&quot;&gt;九、Mike Flow (Base on 《Git in Practice》)&lt;/h4&gt;

&lt;blockquote&gt;Single Pattern&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;/images/2015-11-16-work-in-git/DraggedImage-5.png&quot;&gt;&lt;img src=&quot;/images/2015-11-16-work-in-git/DraggedImage-5.png&quot; alt=&quot;DraggedImage-5&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;Multiple Pattern&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;/images/2015-11-16-work-in-git/DraggedImage-6.png&quot;&gt;&lt;img src=&quot;/images/2015-11-16-work-in-git/DraggedImage-6.png&quot; alt=&quot;DraggedImage-6&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;jerome-flow-i-call-it-this-name&quot;&gt;十、Jerome Flow (I call it this name^_^)&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;/images/2015-11-16-work-in-git/jerome-git-flow1.jpg&quot;&gt;&lt;img src=&quot;/images/2015-11-16-work-in-git/jerome-git-flow1.jpg&quot; alt=&quot;jerome-git-flow&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;&lt;em&gt;参考资料&lt;/em&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://nvie.com/posts/a-successful-git-branching-model/&quot;&gt;A successful Git branching model - Vincent Driessen&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.ituring.com.cn/article/56870&quot;&gt;基于git的源代码管理模型-Git-Flow&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://boxysystems.com/index.php/5-fundamental-differences-between-git-svn/&quot;&gt;5 Fundamental differences between GIT &amp;amp; SVN&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/16666089/whats-the-difference-between-git-merge-and-git-rebase&quot;&gt;What’s the difference between ‘git merge’ and ‘git rebase’?&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://blog.jobbole.com/84664/&quot;&gt;Git的merge和rebase &lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/rryqsh/article/details/8230560&quot;&gt;Git中分支merge和rebase的适用场景及区别&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.infoq.com/cn/git-adventures&quot;&gt;InfoQ - Git历险记&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.oschina.net/translate/10-tips-git-next-level?cmp&quot;&gt;10 Tips to Push Your Git Skills to the Next Level&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://book.douban.com/subject/26107548/&quot;&gt;《Git in Practice》-Manning Press - Mike McQuaid&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.infoq.com/articles/interview-Mike-McQuaid-git-practice&quot;&gt;Interview with Mike McQuaid about Git in Practice&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.oschina.net/translate/git-conventions?cmp&quot;&gt;GIT Conventions&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.oschina.net/question/565065_68194&quot;&gt;git使用简介&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging&quot;&gt;Git-Branching-Basic-Branching-and-Merging&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.git-scm.com/book/en/v2/Git-Branching-Rebasing&quot;&gt;Git-Branching-Rebasing&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.git-tower.com/learn/git/ebook/mac/appendix/from-subversion-to-git&quot;&gt;Switching from Subversion to Git&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
				<pubDate>Mon, 16 Nov 2015 17:51:05 +0800</pubDate>
				<link>http://aboutcoder.com/2015/11/16/work-in-git/</link>
				<guid isPermaLink="true">http://aboutcoder.com/2015/11/16/work-in-git/</guid>
			</item>
		
			<item>
				<title>研发人看互联网营销</title>
				<description>&lt;p&gt;很荣幸地，昨天参加了公司市场VP（以下简称FW）面向全公司作的关于互联网营销的公开演讲。这些年来，公司的市场营销方面从一个局外人的角度上看来确实发生了非常大的变化、进步和飞跃，加以是FW在公司层面公开分享的为数不多的干货讲座之一，满怀期待，同时感触良多，希望写下来以作为后面需要时作参考。&lt;/p&gt;

&lt;p&gt;文章内容准备分为两部分进行记录，第一部分阐述一下的讲座的具体内容，从中挑选出一些自己觉得非常干货的关键点详细撰写一下。第二部分将从讲座中的关键点出发，映射到研发的日常工作上来，分析如何将其中的策略应用到研发工作上来，帮助提高程序员以致于团队层面上的工作效率（注：后续将补发第二部分的博文作扩展分析，请期待~）。&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;一、学习能力&lt;/h4&gt;

&lt;p&gt;作为从原研发负责人的角色变为市场部门负责人的角色，FW是非常成功的一个案例，当中FW提到了自己再三强调的一点——学习能力。一个人拥有强有力的学习能力，他将成为或者正走在成为胜利者的路上。有的人虽然在十几年的象牙塔学习生活中并不是最优秀的，但是有一点如果做到了，那么你就是值得被社会所肯定的，那就是“笨鸟先飞”“勤能补拙”“早起的鸟儿有虫吃”。&lt;/p&gt;

&lt;h4 id=&quot;section-1&quot;&gt;二、拥抱变化&lt;/h4&gt;

&lt;p&gt;可能是因为这四个字作为公司里经常秉承的工作态度吧，季节在变化，时代在变化，客户群在变化，消费态度在变化，总而言之，人们是贪婪的，心中的需求将会永无止境地在发生着变化。虽然中学时候老师们都教育我们要学会对生活满足，但是对于有更为远大理想的人们，这句话可以也应该被改变。&lt;/p&gt;

&lt;p&gt;年轻人，抱怨多了总是不好的，假设生活给了你不能承受之轻，不要悲伤，不要心急，要坦然地去面对和处理好，这也将毫无疑问地将帮助你更快地踏上成功之路。看到这里，是不是觉得很鸡汤，不过虽然鸡汤，但是道理却还是道理。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h4 id=&quot;section-2&quot;&gt;三、抓住大面，傍大款&lt;/h4&gt;

&lt;p&gt;看着这字眼挺晕的对吧，其实当时作者我也晕。不过听完之后就豁然开朗了。&lt;/p&gt;

&lt;p&gt;什么是抓住大面？大面，指的是关键点，主要方面，或者说是痛点。任何一件事情，总有这么一个或者几个举足轻重的关键点，就像武侠小说中提及的命门、致命穴道。只要将这一点抓住了，就等于抓住了所有。其中当然，包含了一定方面的避轻就重的处事思路。&lt;/p&gt;

&lt;p&gt;那么什么是傍大款？傍大款 == 抱大腿？是的。不过关键在于，你要找到合适的大腿。与携程的合作是傍大款，与京东的合作是傍大款，请林志颖Kimi代言是傍大款，冠名江苏卫视非诚勿扰节目是傍大款…&lt;/p&gt;

&lt;p&gt;还有许许多多的类似案例，至于如果你需要确切的文字上的含义来解释傍大腿是什么，那么建议你去百度吧，这篇文章不会去解释这一点。&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;四、单点营销推广，打穿打透，增加压强&lt;/h4&gt;

&lt;p&gt;无论是在何种渠道上投放广告或者作品牌宣传，都要打透吃透。什么是打透吃透？无论在推广时间上、广告类型上、还是用户群的覆盖面上，都要做到预期的层面，抓住关键点，甚至更好的是将这一关键点做到极致。&lt;/p&gt;

&lt;h4 id=&quot;section-4&quot;&gt;五、线上线下整合&lt;/h4&gt;

&lt;p&gt;对于当下互联网环境因素决定，在互联网企业中，不能仅仅满足于在互联网的传播上做到脍炙人口，这一点是不够的，还需要在线下的日常生活中继续延伸，使得家喻户晓，人人皆知。只有线上线下整体综合起来，才能更好更为全面地覆盖客户群体，缺了任一方面都是不完整的推广方案。&lt;/p&gt;

&lt;h4 id=&quot;section-5&quot;&gt;六、价格战&lt;/h4&gt;

&lt;p&gt;这里要说的不是推荐大家一味地在和竞争对手拼低廉价格竞品，而是说，我们不仅要关注产品的性价比高，便宜，更要让客户知道我们是真的便宜，并不是噱头。&lt;/p&gt;

&lt;h4 id=&quot;section-6&quot;&gt;七、找合适的渠道或者实物作为宣传载体，把推广的理念/概念投射出去&lt;/h4&gt;

&lt;p&gt;江苏卫视非诚勿扰节目是渠道，林志颖Kimi代言是载体，一个覆盖了客厅互联网用户群体，一个覆盖了亲子旅游的概念，两者都是精挑细选出来最为合适，性价比最好的推广载体/渠道。寻找这一类载体之前，要从各个方面收集关联信息作对比，或者请专业调研机构帮助统计与分析，不建议决策者个人的喜好来决定推广选型。&lt;/p&gt;

&lt;p&gt;为什么是林志颖Kimi？其中缘由可以概括为俩字：“够火”。&lt;/p&gt;

&lt;p&gt;为什么是江苏卫视非诚勿扰？其中缘由可以概括为仨字：“够普及”。&lt;/p&gt;

&lt;p&gt;另外一点需要提示的是，选定的载体或者渠道，一定要与本身产品、企业文化、宣传理念相符合，这一点是决然不能摒弃的。&lt;/p&gt;

&lt;h4 id=&quot;section-7&quot;&gt;八、口号一定要喊，喊多了自然就是真的&lt;/h4&gt;

&lt;p&gt;这一点觉得没必要详细阐述，懂行的人，一看就懂了。可能办法瞅着比较土，但是应用起来还是实在的。什么“引导者”“领航品牌”神马的等等，都是需要喊的，当然，这仍然是要具备基本的统计数据支撑，不能瞎喊，要找准了痛点喊。&lt;/p&gt;

&lt;h4 id=&quot;section-8&quot;&gt;九、简单粗暴可能是某些情况下最为合适的&lt;/h4&gt;

&lt;p&gt;推广方式不一定要多么地复杂，要求每次都具备多么地技术含量。这里并不是推崇没有技术含量的手段，这里想要说明的是，除了技术含量外，我们更要着眼于要点，击中营销推广的“要害”，简单粗暴，不择手段，达到目的的办法，就是当下最好、最有效的方法。如果一味地追求高技术含量，但是却低产能的办法，那么这些办法舍弃也罢。&lt;/p&gt;

&lt;h4 id=&quot;section-9&quot;&gt;十、产品即营销，产品的质量仍然是最重要的，没有之一&lt;/h4&gt;

&lt;p&gt;无论是何种办法，无论得到什么样子的推广效果，要想脍炙人口，人人信赖，忠诚于你的产品，产品的高质量保证是务必不可松懈的。只有好的产品才值得被推广，只有高质量的产品才能更好地被推广，被消费者所接受。&lt;/p&gt;

&lt;h4 id=&quot;ota&quot;&gt;十一、口碑品牌在OTA行业尤其重要&lt;/h4&gt;

&lt;p&gt;旅游产品不同于一般的实体产品，不像iPhone，不像小米手机，不像乐视电视。旅游产品是虚拟存在的，在出游之前客人都将看不见摸不着，只收到一条出游通知的短信，只能客人自己YY想象。如果产品服务口碑不好，很难让消费者掏腰包下单消费；如果企业口碑不好，很难得到消费者的光临和信赖。旅游产品是体验式产品，口口相传的口碑式传播是非常重要的。&lt;/p&gt;

&lt;h4 id=&quot;section-10&quot;&gt;十二、营销社会化&lt;/h4&gt;

&lt;p&gt;无论是正面积极的营销手段，还是有意无意中收获的在可控范围内的消极影响，从营销推广上看来，都是具有一定积极意义的。营销的PR老大就好比战场上渴望着打仗的将军，如果没有战役，那么这位将军将是孤独的和寂寞的。其中提及的2015年发生的17家供应商联名抵制的案例便是这一内容的参考案例。&lt;/p&gt;

&lt;h4 id=&quot;section-11&quot;&gt;十三、擦亮品牌，全员营销&lt;/h4&gt;

&lt;p&gt;一个人的力量是有限的，但是假设是几个人、一群人、一大伙人、甚至于所有人都在为公司的产品品牌作有意无意地、潜移默化地在亲朋好友间宣传，那么力量可以相信是不可估量的。&lt;/p&gt;

&lt;h4 id=&quot;section-12&quot;&gt;十四、追求不会停止&lt;/h4&gt;

&lt;p&gt;途牛会继续在品牌塑造的道路上继续迈步前进，在2015年的夏秋交际，依然会有重磅举措，鉴于机密考虑，各位请继续关注我们，你会发现我们会让你们继续惊讶惊叫着。&lt;/p&gt;

&lt;p&gt;最后，6.16是FW的生日，这里也同时给他送上一份衷心的祝福，Happy birthday to FW ALM！&lt;/p&gt;

</description>
				<pubDate>Thu, 18 Jun 2015 00:24:40 +0800</pubDate>
				<link>http://aboutcoder.com/2015/06/18/internet-marketing-views-of-developers/</link>
				<guid isPermaLink="true">http://aboutcoder.com/2015/06/18/internet-marketing-views-of-developers/</guid>
			</item>
		
	</channel>
</rss>